#!/usr/bin/env zsh
#
#
set -u -e -o pipefail


export PATH="$PATH:/apps/alegria/bin"

if test -e /home/pi/apps/alegria ; then
  cd /home/pi/apps/alegria
else
  cd /apps/alegria
fi

case "$@" in
  -h|--help|help)
    cmd="$0"
    echo "$cmd pid|restart"
    echo "$cmd lobby-tv"
    echo "$cmd pull"
    echo "$cmd reset|update accident sign"
    echo "$cmd write accident UNIX_TIMESTAMP"
    echo "     Updates accident file to today."
    echo "$cmd syntax"
    ;;
  "restart")
    apid="$(alegria pid)"
    if test -z "$apid" ; then
      echo "!!! No pid found." >&2
      exit 1
    fi
    set -x
    kill -USR1 "$apid"
    ;;
  "pid")
    if ! test -e /tmp/lobby.tv.process.txt ; then
      exit 1
    fi
    the_pid="$(cat /tmp/lobby.tv.process.txt)"
    if test -z "$the_pid" ; then
      exit 1
    fi
    if ! ps -p "$the_pid" > /dev/null ; then
      exit 1
    fi
    echo "$the_pid"
    ;;
  "lobby-tv")
    {
      echo "=== PATH: $PATH";
      echo "=== USER: $USER";
    } || :
    if test "$(date +"%H")" -lt "7" ; then
      count=0
      while test "$count" -lt 15 && ! ping -c1 8.8.8.8; ; do
        echo "--- Waiting for network..."
        sleep 1
        count="$((count + 1))"
      done
      { "$0" pull || echo "!!! error !!!"; } &>/tmp/lobby-tv.txt
    fi
    touch /tmp/rerun.txt
    while test -e /tmp/rerun.txt ; do
      src/lobby-tv/main
    done
    ;;
  "vertical-01")
    exec src/vertical-01/main
    ;;
  "menu")
    exec src/menu/main
    ;;
  "crontab update")
    set -x
    "$0" pull
    date > /tmp/crontab.update.txt
    ;;
  "pull")
    set -x
    date

    echo "" > /tmp/alegria.pull.txt
    while read -r DIR ; do
      cd "$DIR"
      if test -e .git ; then
        git pull
        echo "Done: $DIR" >> /tmp/alegria.pull.txt
      else
        echo "Skipping: $DIR"
      fi
    done < <(find /apps/ -mindepth 1 -maxdepth 1 -type d)
    ;;
  "reset accident sign")
    ruby src/accident.sign.rb reset
    ruby src/accident.sign.rb update
    ;;
  "update accident sign")
    ruby src/accident.sign.rb update
    ;;
  "write accident "*)
    ruby src/accident.sign.rb write "$3"
    ruby src/accident.sign.rb update
    ;;
  'update birthday sign')
    ruby src/Birthday.Sign.rb update
    ;;
  "syntax")
    while read -r fn ; do
      echo -n "--- $fn: "
      ruby -c "$fn"
    done < <(find src -type f -iname '*.rb' -or -name 'main' )
    ;;
  *)
    echo "!!! Invalid option: $@" >&2
    exit 2
    ;;
esac

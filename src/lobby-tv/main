#!/usr/bin/env ruby

require "./src/alegria"

puts ` echo on 0 | cec-client -s -d 1 ; `.strip
sleep 3

minimize_windows
hide_mouse_cursor
auto_git_pull
auto_hide_cursor

pid = Process.pid
fork {
  puts "=== Starting forked process: #{Process.pid}"
  while process?(pid)
    fork {
      `/apps/alegria/sh/run pull`
      File.write("/tmp/lobby.pull.txt", Time.now.to_s)
    }
    sleep 120
    sleep_to_hour
  end
  puts "=== Done forked process: #{Process.pid}"
}

HOME_DIR="/home/pi"
puts "=== Current directory: #{HOME_DIR}"
puts "=== Date: #{Time.now}"

do_loop = true

# fbi -a -t 5 -noverbose -u -l $PWD/list.txt || {
#

def run_cmd(cmd)
  puts "=== Running: #{cmd}"
  puts `#{cmd}`.strip
end

class File_Loop
  attr_reader :i, :list
  def initialize(cmd)
    @i = 0
    @list = `#{cmd}`.strip.split("\n")
  end # def

  def next
    photo = @list[@i]
    @i += 1
    @i = 0 if @i > (@list.size - 1)
    photo
  end

  def length
    @list.length
  end

  def last_index
    @list.size - 1
  end

  def end?
    @i >= last_index
  end

  def current
    @list[@i]
  end

  def nth?(x)
    (@i % x) == 0
  end
end # class

# photos = File_Loop.new(%[find "#{HOME_DIR}/Pictures/\" -maxdepth 1 -type f -iname '*.jpg' -or -iname '*.png' | sort -R --random-source=/dev/urandom])
photo_ext  = %[ -type f -iname '*.jpg' -or -iname '*.png' -or -iname '*.heic' ]
office     = File_Loop.new(%[find "/apps/slides/lobby-tv" -maxdepth 1 #{photo_ext} ])
slide_show = File_Loop.new(%[find "#{HOME_DIR}/Pictures/" -maxdepth 1 #{photo_ext}   ])
videos     = File_Loop.new(%[find "#{HOME_DIR}/Videos/" -maxdepth 1 -type f -iname '*.webm' -or -iname '*.mp4'])
fun_videos = File_Loop.new(%[find "#{HOME_DIR}/Videos/fun" -maxdepth 1 -type f -iname '*.webm' -or -iname '*.mp4'])
corp_videos = File_Loop.new(%[find "#{HOME_DIR}/Videos/" -maxdepth 1 -type f -iname 'Laser*' -or -name 'DEL*'])

system("sh/run update accident sign")

def show_accident_days
  run_cmd(%[pcmanfm --wallpaper-mode=fit --set-wallpaper "/tmp/accident.svg"])
end
show_accident_days

last_time = "none"
while do_loop
  hour     = Time.now.strftime('%k').to_i
  minute   = Time.now.strftime('%M').to_i
  early_morning = hour < 7 && minute < 51
  morning    = !early_morning && hour >= 7 && hour < 12
  lunch      = hour == 11 && minute < 15
  after_noon = hour >= 12
  shutdown   = hour > (12 + 4)

  if !early_morning
    system(%[amixer set Master 20%])
  end

  case
  when early_morning
    system(%[amixer set Master 85%])
    show_accident_days
    sleep 30
    # run_cmd(%[pcmanfm --wallpaper-mode=fit --set-wallpaper "#{slide_show.next}"])
    system(%[mpv --sub-auto=fuzzy --fullscreen "#{fun_videos.next}"])
    sleep 15
    last_time = "early_morning"

  when shutdown
    puts ` echo standby 0 | cec-client -s -d 1 ; `.strip
    do_loop = false
    system("git pull")
    system("sh/run update accident sign")
    last_time = "shutdown"

  else
    office.length.times do
      next_photo = office.next
      run_cmd(%[pcmanfm --wallpaper-mode=fit --set-wallpaper "#{next_photo}"])
      sleep 60
    end # .times do

    show_accident_days
    sleep 30

    # run_cmd(%[pcmanfm --wallpaper-mode=fit --set-wallpaper "#{slide_show.next}"])
    # sleep 12

    # system(%[mpv --sub-auto=fuzzy --fullscreen "#{videos.next}"])
    last_time = "normal"

  end # case

end # while

#  when lunch
#    run_cmd(%[pcmanfm --wallpaper-mode=fit --set-wallpaper "#{slide_show.next}"])
#    sleep 6
#    run_cmd(%[pcmanfm --wallpaper-mode=fit --set-wallpaper "/home/pi/Pictures/felip.eli.tota.jpg"])
#    sleep 10
#
